{"ast":null,"code":"import _regeneratorRuntime from \"F:/programmingLanguages/reactJs/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"F:/programmingLanguages/reactJs/covid_tracker/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nvar url = \"https://covid19.mathdro.id/api\";\nexport var fetchData = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var _yield$axios$get, data, modifiedData;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get(url);\n\n          case 3:\n            _yield$axios$get = _context.sent;\n            data = _yield$axios$get.data;\n            modifiedData = {\n              confirmed: data.confirmed,\n              recovered: data.recovered,\n              deaths: data.deaths,\n              lastUpdate: data.lastUpdate\n            };\n            return _context.abrupt(\"return\", modifiedData);\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0);\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 9]]);\n  }));\n\n  return function fetchData() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var fetchDailyData = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var _yield$axios$get2, data;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return axios.get(\"\".concat(url, \"/daily\"));\n\n          case 3:\n            _yield$axios$get2 = _context2.sent;\n            data = _yield$axios$get2.data;\n            console.log(data);\n            _context2.next = 10;\n            break;\n\n          case 8:\n            _context2.prev = 8;\n            _context2.t0 = _context2[\"catch\"](0);\n\n          case 10:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 8]]);\n  }));\n\n  return function fetchDailyData() {\n    return _ref2.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["F:/programmingLanguages/reactJs/covid_tracker/src/api/ApiData.js"],"names":["axios","url","fetchData","get","data","modifiedData","confirmed","recovered","deaths","lastUpdate","console","log","fetchDailyData"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,IAAMC,GAAG,GAAG,gCAAZ;AACA,OAAO,IAAMC,SAAS;AAAA,sEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEEF,KAAK,CAACG,GAAN,CAAUF,GAAV,CAFF;;AAAA;AAAA;AAEbG,YAAAA,IAFa,oBAEbA,IAFa;AAGfC,YAAAA,YAHe,GAGA;AACnBC,cAAAA,SAAS,EAAEF,IAAI,CAACE,SADG;AAEnBC,cAAAA,SAAS,EAAEH,IAAI,CAACG,SAFG;AAGnBC,cAAAA,MAAM,EAAEJ,IAAI,CAACI,MAHM;AAInBC,cAAAA,UAAU,EAAEL,IAAI,CAACK;AAJE,aAHA;AAAA,6CASdJ,YATc;;AAAA;AAAA;AAAA;AAYrBK,YAAAA,OAAO,CAACC,GAAR;;AAZqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATT,SAAS;AAAA;AAAA;AAAA,GAAf;AAeP,OAAO,IAAMU,cAAc;AAAA,uEAAG;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEHZ,KAAK,CAACG,GAAN,WAAaF,GAAb,YAFG;;AAAA;AAAA;AAElBG,YAAAA,IAFkB,qBAElBA,IAFkB;AAG1BM,YAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;AAH0B;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdQ,cAAc;AAAA;AAAA;AAAA,GAApB","sourcesContent":["import axios from \"axios\";\r\nconst url = \"https://covid19.mathdro.id/api\";\r\nexport const fetchData = async () => {\r\n  try {\r\n    const { data } = await axios.get(url);\r\n    const modifiedData = {\r\n      confirmed: data.confirmed,\r\n      recovered: data.recovered,\r\n      deaths: data.deaths,\r\n      lastUpdate: data.lastUpdate,\r\n    };\r\n    return modifiedData;\r\n    // console.log(modifiedData());\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    console.log(data);\r\n  } catch (error) {}\r\n};\r\n"]},"metadata":{},"sourceType":"module"}