{"ast":null,"code":"var _jsxFileName = \"F:\\\\programmingLanguages\\\\reactJs\\\\covid_tracker\\\\src\\\\components\\\\Chart\\\\Presentation.js\",\n    _this = this;\n\nimport React from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport \"../../styles/Chart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Presentation = function Presentation(props) {\n  var dailyData = props.dailyData;\n  console.log(dailyData);\n  var barChart = confirmed ? /*#__PURE__*/_jsxDEV(Bar, {\n    data: {\n      labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n      datasets: [{\n        label: \"People\",\n        backgroundColor: [\"rgba(0, 0, 255, 0.5)\", \"rgba(0, 255, 0, 0.5)\", \"rgba(255, 0, 0, 0.5)\"],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: \"Current state in \".concat(country)\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, _this) : null;\n  var lineChart = dailyData[0] ? /*#__PURE__*/_jsxDEV(Line, {\n    data: {\n      labels: dailyData.map(function (_ref) {\n        var date = _ref.date;\n        return new Date(date).toLocaleDateString();\n      }),\n      datasets: [{\n        data: dailyData.map(function (data) {\n          return data.confirmed;\n        }),\n        label: \"Infected\",\n        borderColor: \"#3333ff\",\n        fill: true\n      }, {\n        data: dailyData.map(function (data) {\n          return data.deaths;\n        }),\n        label: \"Deaths\",\n        borderColor: \"red\",\n        backgroundColor: \"rgba(255, 0, 0, 0.5)\",\n        fill: true\n      }, {\n        data: dailyData.map(function (data) {\n          return data.recovered;\n        }),\n        label: \"Recovered\",\n        borderColor: \"green\",\n        backgroundColor: \"rgba(0, 255, 0, 0.5)\",\n        fill: true\n      }]\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, _this) : null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"heloo chats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, _this), lineChart]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = Presentation;\nexport default Presentation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Presentation\");","map":{"version":3,"sources":["F:/programmingLanguages/reactJs/covid_tracker/src/components/Chart/Presentation.js"],"names":["React","Line","Bar","Presentation","props","dailyData","console","log","barChart","confirmed","labels","datasets","label","backgroundColor","data","value","recovered","deaths","legend","display","title","text","country","lineChart","map","date","Date","toLocaleDateString","borderColor","fill"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAO,wBAAP;;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,MAAQC,SAAR,GAAsBD,KAAtB,CAAQC,SAAR;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,MAAMG,QAAQ,GAAGC,SAAS,gBACxB,QAAC,GAAD;AACE,IAAA,IAAI,EAAE;AACJC,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAa,WAAb,EAA0B,QAA1B,CADJ;AAEJC,MAAAA,QAAQ,EAAE,CACR;AACEC,QAAAA,KAAK,EAAE,QADT;AAEEC,QAAAA,eAAe,EAAE,CACf,sBADe,EAEf,sBAFe,EAGf,sBAHe,CAFnB;AAOEC,QAAAA,IAAI,EAAE,CAACL,SAAS,CAACM,KAAX,EAAkBC,SAAS,CAACD,KAA5B,EAAmCE,MAAM,CAACF,KAA1C;AAPR,OADQ;AAFN,KADR;AAeE,IAAA,OAAO,EAAE;AACPG,MAAAA,MAAM,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OADD;AAEPC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAE,IAAX;AAAiBE,QAAAA,IAAI,6BAAsBC,OAAtB;AAArB;AAFA;AAfX;AAAA;AAAA;AAAA;AAAA,WADwB,GAqBtB,IArBJ;AAsBA,MAAMC,SAAS,GAAGlB,SAAS,CAAC,CAAD,CAAT,gBAChB,QAAC,IAAD;AACE,IAAA,IAAI,EAAE;AACJK,MAAAA,MAAM,EAAEL,SAAS,CAACmB,GAAV,CAAc;AAAA,YAAGC,IAAH,QAAGA,IAAH;AAAA,eACpB,IAAIC,IAAJ,CAASD,IAAT,EAAeE,kBAAf,EADoB;AAAA,OAAd,CADJ;AAIJhB,MAAAA,QAAQ,EAAE,CACR;AACEG,QAAAA,IAAI,EAAET,SAAS,CAACmB,GAAV,CAAc,UAACV,IAAD;AAAA,iBAAUA,IAAI,CAACL,SAAf;AAAA,SAAd,CADR;AAEEG,QAAAA,KAAK,EAAE,UAFT;AAGEgB,QAAAA,WAAW,EAAE,SAHf;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADQ,EAOR;AACEf,QAAAA,IAAI,EAAET,SAAS,CAACmB,GAAV,CAAc,UAACV,IAAD;AAAA,iBAAUA,IAAI,CAACG,MAAf;AAAA,SAAd,CADR;AAEEL,QAAAA,KAAK,EAAE,QAFT;AAGEgB,QAAAA,WAAW,EAAE,KAHf;AAIEf,QAAAA,eAAe,EAAE,sBAJnB;AAKEgB,QAAAA,IAAI,EAAE;AALR,OAPQ,EAcR;AACEf,QAAAA,IAAI,EAAET,SAAS,CAACmB,GAAV,CAAc,UAACV,IAAD;AAAA,iBAAUA,IAAI,CAACE,SAAf;AAAA,SAAd,CADR;AAEEJ,QAAAA,KAAK,EAAE,WAFT;AAGEgB,QAAAA,WAAW,EAAE,OAHf;AAIEf,QAAAA,eAAe,EAAE,sBAJnB;AAKEgB,QAAAA,IAAI,EAAE;AALR,OAdQ;AAJN;AADR;AAAA;AAAA;AAAA;AAAA,WADgB,GA8Bd,IA9BJ;AAgCA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEGN,SAFH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAMD,CA/DD;;KAAMpB,Y;AAiEN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport \"../../styles/Chart.css\";\r\nconst Presentation = (props) => {\r\n  const { dailyData } = props;\r\n  console.log(dailyData);\r\n  const barChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      options={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state in ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n  const lineChart = dailyData[0] ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) =>\r\n          new Date(date).toLocaleDateString()\r\n        ),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map((data) => data.confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map((data) => data.deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map((data) => data.recovered),\r\n            label: \"Recovered\",\r\n            borderColor: \"green\",\r\n            backgroundColor: \"rgba(0, 255, 0, 0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className=\"Chart\">\r\n      <p>heloo chats</p>\r\n      {lineChart}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Presentation;\r\n"]},"metadata":{},"sourceType":"module"}