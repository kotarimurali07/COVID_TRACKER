{"ast":null,"code":"var _jsxFileName = \"F:\\\\programmingLanguages\\\\reactJs\\\\covid_tracker\\\\src\\\\components\\\\Chart\\\\Presentation.js\",\n    _this = this;\n\nimport React from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport \"../../styles/Chart.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Presentation = function Presentation(props) {\n  var dailyData = props.dailyData; // const lineChat = dailyData[0] ? (\n  //   <Line\n  //     data={{\n  //       labels: dailyData(({ date }) => date),\n  //       datasets: [\n  //         {\n  //           data: dailyData(({ confirmed }) => confirmed),\n  //           label: \"infected\",\n  //           borderColor: \"blue\",\n  //         },\n  //         {\n  //           data: dailyData(({ deaths }) => deaths),\n  //           label: \"deaths\",\n  //           backgroundColor: \"red\",\n  //           fill: true,\n  //         },\n  //       ],\n  //     }}\n  //   />\n  // ) : null;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Chart\",\n    children: \"lineChat\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, _this);\n};\n\n_c = Presentation;\nexport default Presentation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Presentation\");","map":{"version":3,"sources":["F:/programmingLanguages/reactJs/covid_tracker/src/components/Chart/Presentation.js"],"names":["React","Line","Bar","Presentation","props","dailyData"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAO,wBAAP;;;AACA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,MAAQC,SAAR,GAAsBD,KAAtB,CAAQC,SAAR,CAD8B,CAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,sBAAO;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAvBD;;KAAMF,Y;AAwBN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport \"../../styles/Chart.css\";\r\nconst Presentation = (props) => {\r\n  const { dailyData } = props;\r\n  // const lineChat = dailyData[0] ? (\r\n  //   <Line\r\n  //     data={{\r\n  //       labels: dailyData(({ date }) => date),\r\n  //       datasets: [\r\n  //         {\r\n  //           data: dailyData(({ confirmed }) => confirmed),\r\n  //           label: \"infected\",\r\n  //           borderColor: \"blue\",\r\n  //         },\r\n  //         {\r\n  //           data: dailyData(({ deaths }) => deaths),\r\n  //           label: \"deaths\",\r\n  //           backgroundColor: \"red\",\r\n  //           fill: true,\r\n  //         },\r\n  //       ],\r\n  //     }}\r\n  //   />\r\n  // ) : null;\r\n  return <div className=\"Chart\">lineChat</div>;\r\n};\r\nexport default Presentation;\r\n"]},"metadata":{},"sourceType":"module"}